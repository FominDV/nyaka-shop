plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'ru.fomin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.hibernate.validator:hibernate-validator'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'redis.clients:jedis'

	implementation 'com.paypal.sdk:checkout-sdk:1.0.5'

	compileOnly 'io.springfox:springfox-swagger2:2.7.0'
	compileOnly 'io.springfox:springfox-swagger-ui:2.7.0'
	implementation 'io.springfox:springfox-bean-validators:2.7.0'

	compileOnly 'io.minio:minio:8.3.0'
	implementation 'com.squareup.okhttp3:okhttp:4.9.1'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.hibernate:hibernate-jpamodelgen'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-extensions:0.1.0"
	annotationProcessor 'org.hibernate.validator:hibernate-validator'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testAnnotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-extensions:0.1.0"
}

test {
	useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceSets.configureEach { sourceSet ->
	tasks.named(sourceSet.compileJavaTaskName).configure {
		options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/java")
	}
}
